/*
 * –£—Å–ª–æ–≤–∏–µ:
 * –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∫–∞–∫ —Å–≤–æ–π –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∏
 * –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
 *
 * –ù–∞–ø—Ä–∏–º–µ—Ä:
 * Input: "qwerty"
 * Output: true
 *
 * Input: "qwertt"
 * Output: false
 */

extension String {
  var symbolsIsUnique: Bool { Set(self).count == self.count }
}

let firstString  = "1234"
let secondString = "1123"
let thirdString  = "üôÉüôÇ"

print([firstString, secondString, thirdString]
  .map { $0.symbolsIsUnique }
  .map { String($0) }
  .joined(separator: "\n"))
/*
 * Output:
 * true
 * false
 * true
 */
